// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Otobur.Data;

#nullable disable

namespace Otobur.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250622111805_User")]
    partial class User
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AksesyonDefteri", b =>
                {
                    b.Property<string>("AksesyonNumarasi")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BitkininAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Koken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Koordinat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lokasyon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MateryalCesidi")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToplanmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToplayiciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToplayiciKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToplayiciNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AksesyonNumarasi");

                    b.ToTable("AksesyonNumarasi");

                    b.HasData(
                        new
                        {
                            AksesyonNumarasi = "2023-00345",
                            BitkininAdi = "Pinus pinea",
                            Koken = "Kültür; Köken bilinmiyor",
                            Koordinat = "-",
                            Lokasyon = "-",
                            MateryalCesidi = 0,
                            ToplanmaTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ToplayiciAdi = "-",
                            ToplayiciKodu = "-",
                            ToplayiciNumarasi = "-"
                        },
                        new
                        {
                            AksesyonNumarasi = "2023-00346",
                            BitkininAdi = "Cedrus libani",
                            Koken = "Köken bilgisi yok",
                            Koordinat = "-",
                            Lokasyon = "-",
                            MateryalCesidi = 0,
                            ToplanmaTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ToplayiciAdi = "-",
                            ToplayiciKodu = "-",
                            ToplayiciNumarasi = "-"
                        },
                        new
                        {
                            AksesyonNumarasi = "2023-00347",
                            BitkininAdi = "Aethionema turcica",
                            Koken = "Doğal",
                            Koordinat = "39°52'45.34'' K - 32°15'43.45'' D",
                            Lokasyon = "Ankara; Beypazarı, Çakal gölü, 1750 m",
                            MateryalCesidi = 1,
                            ToplanmaTarihi = new DateTime(2025, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ToplayiciAdi = "Asil Güner",
                            ToplayiciKodu = "AG",
                            ToplayiciNumarasi = "12321"
                        },
                        new
                        {
                            AksesyonNumarasi = "2023-00348",
                            BitkininAdi = "Cota tinctoria",
                            Koken = "Kültür; Köken Biliniyor",
                            Koordinat = "-",
                            Lokasyon = "-",
                            MateryalCesidi = 1,
                            ToplanmaTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ToplayiciAdi = "-",
                            ToplayiciKodu = "-",
                            ToplayiciNumarasi = "-"
                        },
                        new
                        {
                            AksesyonNumarasi = "2023-00349",
                            BitkininAdi = "Mespilus germanica",
                            Koken = "Kültür; Köken Biliniyor",
                            Koordinat = "-",
                            Lokasyon = "-",
                            MateryalCesidi = 2,
                            ToplanmaTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ToplayiciAdi = "-",
                            ToplayiciKodu = "-",
                            ToplayiciNumarasi = "-"
                        },
                        new
                        {
                            AksesyonNumarasi = "2023-00350",
                            BitkininAdi = "Malus sylvestris",
                            Koken = "Kültür; Köken Biliniyor",
                            Koordinat = "-",
                            Lokasyon = "-",
                            MateryalCesidi = 0,
                            ToplanmaTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ToplayiciAdi = "-",
                            ToplayiciKodu = "-",
                            ToplayiciNumarasi = "-"
                        },
                        new
                        {
                            AksesyonNumarasi = "2023-00351",
                            BitkininAdi = "Aucuba japonica",
                            Koken = "Kültür; Köken Biliniyor",
                            Koordinat = "-",
                            Lokasyon = "-",
                            MateryalCesidi = 2,
                            ToplanmaTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ToplayiciAdi = "-",
                            ToplayiciKodu = "-",
                            ToplayiciNumarasi = "-"
                        },
                        new
                        {
                            AksesyonNumarasi = "2023-00352",
                            BitkininAdi = "Pelargonium quercetorum",
                            Koken = "Doğal",
                            Koordinat = "41°12'32.12'' K - 38°34'26.87'' D",
                            Lokasyon = "Bitlis; Tatvan, Demir Dağı, 1350 m",
                            MateryalCesidi = 1,
                            ToplanmaTarihi = new DateTime(2022, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ToplayiciAdi = "Salih Sercan Kanoğlu",
                            ToplayiciKodu = "SKNG",
                            ToplayiciNumarasi = "4532"
                        },
                        new
                        {
                            AksesyonNumarasi = "2023-00353",
                            BitkininAdi = "Flueggea anatolica",
                            Koken = "Doğal",
                            Koordinat = "37°24'33.01'' K - 34°23'24.53'' D",
                            Lokasyon = "Mersin; Kadıncık Vadisi, 455 m",
                            MateryalCesidi = 1,
                            ToplanmaTarihi = new DateTime(2023, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ToplayiciAdi = "Mahmut Can",
                            ToplayiciKodu = "MCAN",
                            ToplayiciNumarasi = "2345"
                        },
                        new
                        {
                            AksesyonNumarasi = "2023-00354",
                            BitkininAdi = "Thermopsis turcica",
                            Koken = "Doğal",
                            Koordinat = "39°23'13.45'' K - 31°23'15.42'' D",
                            Lokasyon = "Konya; Eber Gölü çevresi, 876 m",
                            MateryalCesidi = 1,
                            ToplanmaTarihi = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ToplayiciAdi = "Birol Sever",
                            ToplayiciKodu = "BRLS",
                            ToplayiciNumarasi = "6754"
                        },
                        new
                        {
                            AksesyonNumarasi = "2023-00355",
                            BitkininAdi = "Crocus biflorus",
                            Koken = "Doğal",
                            Koordinat = "39°12'23.44'' K - 39°34'32.44'' D",
                            Lokasyon = "Erzincan; Keşiş Dağı, 1786 m",
                            MateryalCesidi = 3,
                            ToplanmaTarihi = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ToplayiciAdi = "Emrah Çelik",
                            ToplayiciKodu = "ECLK",
                            ToplayiciNumarasi = "1201"
                        });
                });

            modelBuilder.Entity("HerbaryumDefteri", b =>
                {
                    b.Property<int>("HerbaryumNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HerbaryumNo"));

                    b.Property<string>("AksesyonNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BitkininAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fotograf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Koordinat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lokasyon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToplayiciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToplayiciKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToplayiciNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HerbaryumNo");

                    b.HasIndex("AksesyonNumarasi")
                        .IsUnique();

                    b.ToTable("HerbaryumDefteri");

                    b.HasData(
                        new
                        {
                            HerbaryumNo = 345,
                            AksesyonNumarasi = "2023-00354",
                            BitkininAdi = "Thermopsis turcica",
                            Fotograf = "Var",
                            Koordinat = "33°23'12,54'' K - 25°34'34,32'' D",
                            Lokasyon = "Konya; Eber Gölü çevresi, 876 m",
                            ToplayiciAdi = "Birol Sever",
                            ToplayiciKodu = "BRLS",
                            ToplayiciNumarasi = "6754"
                        },
                        new
                        {
                            HerbaryumNo = 234,
                            AksesyonNumarasi = "2023-00355",
                            BitkininAdi = "Crocus biflorus",
                            Fotograf = "Var",
                            Koordinat = "39°21'23,34'' K - 34°32'34,44'' D",
                            Lokasyon = "Erzincan; Keşiş Dağı, 1786 m",
                            ToplayiciAdi = "Emrah Çelik",
                            ToplayiciKodu = "ECLK",
                            ToplayiciNumarasi = "1201"
                        },
                        new
                        {
                            HerbaryumNo = 123,
                            AksesyonNumarasi = "2023-00350",
                            BitkininAdi = "Malus sylvestris",
                            Fotograf = "Yok",
                            Koordinat = "-",
                            Lokasyon = "-",
                            ToplayiciAdi = "Bahçe Örneği",
                            ToplayiciKodu = "-",
                            ToplayiciNumarasi = "-"
                        },
                        new
                        {
                            HerbaryumNo = 456,
                            AksesyonNumarasi = "2023-00347",
                            BitkininAdi = "Aethionema turcica",
                            Fotograf = "Var",
                            Koordinat = "36°52'45,34'' K - 23°15'34,45'' D",
                            Lokasyon = "Ankara; Beypazarı, Çakal gölü, 1750 m",
                            ToplayiciAdi = "Adil Güner",
                            ToplayiciKodu = "AG",
                            ToplayiciNumarasi = "12321"
                        });
                });

            modelBuilder.Entity("Kullanici", b =>
                {
                    b.Property<string>("KullaniciAdi")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GorebilecegiTablolar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("KayitSilebilme")
                        .HasColumnType("bit");

                    b.Property<string>("KayitYapabilecegiTablolar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciGrubu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KullaniciAdi");

                    b.ToTable("Kullanicilar");

                    b.HasData(
                        new
                        {
                            KullaniciAdi = "Adil Güner",
                            Eposta = "ornek@gmail.com",
                            GorebilecegiTablolar = "",
                            KayitSilebilme = false,
                            KayitYapabilecegiTablolar = "",
                            KullaniciGrubu = "",
                            KullaniciKodu = "AG",
                            Parola = "parola1",
                            Telefon = "0597 345 67 89"
                        },
                        new
                        {
                            KullaniciAdi = "Salih Sercan Kanoğlu",
                            Eposta = "ornek1@gmail.com",
                            GorebilecegiTablolar = "",
                            KayitSilebilme = false,
                            KayitYapabilecegiTablolar = "",
                            KullaniciGrubu = "",
                            KullaniciKodu = "SKNG",
                            Parola = "parola2",
                            Telefon = "0587 123 45 67"
                        },
                        new
                        {
                            KullaniciAdi = "Mahmut Can",
                            Eposta = "ornek2@gmail.com",
                            GorebilecegiTablolar = "",
                            KayitSilebilme = false,
                            KayitYapabilecegiTablolar = "",
                            KullaniciGrubu = "",
                            KullaniciKodu = "MCAN",
                            Parola = "parola3",
                            Telefon = "0589 980 76 54"
                        },
                        new
                        {
                            KullaniciAdi = "Birol Sever",
                            Eposta = "ornek3@gmail.com",
                            GorebilecegiTablolar = "",
                            KayitSilebilme = false,
                            KayitYapabilecegiTablolar = "",
                            KullaniciGrubu = "",
                            KullaniciKodu = "BRLS",
                            Parola = "parola4",
                            Telefon = "0588 678 45 32"
                        },
                        new
                        {
                            KullaniciAdi = "Emrah Çelik",
                            Eposta = "ornek4@gmail.com",
                            GorebilecegiTablolar = "",
                            KayitSilebilme = false,
                            KayitYapabilecegiTablolar = "",
                            KullaniciGrubu = "",
                            KullaniciKodu = "ECLK",
                            Parola = "parola5",
                            Telefon = "0567 789 01 23"
                        });
                });

            modelBuilder.Entity("TohumBankasi", b =>
                {
                    b.Property<string>("AksesyonNumarasi")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BulunduguDolap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Miktar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AksesyonNumarasi");

                    b.ToTable("TohumBankasi");

                    b.HasData(
                        new
                        {
                            AksesyonNumarasi = "2023-00347",
                            BulunduguDolap = "1A3",
                            Miktar = "1 küçük şişe (30cl)"
                        },
                        new
                        {
                            AksesyonNumarasi = "2023-00348",
                            BulunduguDolap = "2B4",
                            Miktar = "1 küçük şişe (30cl), 1 büyük şişe (100cl)"
                        },
                        new
                        {
                            AksesyonNumarasi = "2023-00352",
                            BulunduguDolap = "3A2",
                            Miktar = "1 orta şişe (50 cl)"
                        },
                        new
                        {
                            AksesyonNumarasi = "2023-00353",
                            BulunduguDolap = "2D3",
                            Miktar = "1 büyük şişe (100 cl)"
                        },
                        new
                        {
                            AksesyonNumarasi = "2023-00354",
                            BulunduguDolap = "1A2",
                            Miktar = "1 orta şişe (50 cl), 2 büyük şişe (100 cl)"
                        });
                });

            modelBuilder.Entity("HerbaryumDefteri", b =>
                {
                    b.HasOne("AksesyonDefteri", "Aksesyon")
                        .WithOne("Herbaryum")
                        .HasForeignKey("HerbaryumDefteri", "AksesyonNumarasi")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aksesyon");
                });

            modelBuilder.Entity("TohumBankasi", b =>
                {
                    b.HasOne("AksesyonDefteri", "Aksesyon")
                        .WithOne()
                        .HasForeignKey("TohumBankasi", "AksesyonNumarasi")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aksesyon");
                });

            modelBuilder.Entity("AksesyonDefteri", b =>
                {
                    b.Navigation("Herbaryum")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
